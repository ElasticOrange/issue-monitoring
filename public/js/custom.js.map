{"version":3,"sources":["deleteDocument.js","ajaxForms.js","datatableTranslated.js","SetPublishedAjax.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbnNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"custom.js","sourcesContent":["$(document).ready(function(){\n    $('[data-confirm=true]').click(function(e)\n    {\n        if(confirm('Vrei sa stergi acest user ?'))\n        {\n            return true;\n        }\n        else\n        {\n            e.preventDefault();\n            return false;\n        }\n    });\n});","var $successBox, $errorBox, $warningBox, successBoxTimeout, errorBoxTimeout;\nvar LOADER_DELAY = 200;\n\nfunction redirect(url, timeout) {\n    if (!timeout) {\n        timeout = 1;\n    }\n\n    setTimeout(function() {\n        window.document.location = url;\n    } , timeout);\n}\n\nfunction hideSuccessMessage() {\n    $successBox.addClass('hidden');\n    clearTimeout(successBoxTimeout);\n}\n\nfunction showSuccessMessage(caption) {\n    hideErrorMessage();\n    $successBox.find('.caption').html(caption);\n    $successBox.removeClass('hidden');\n\n    successBoxTimeout = setTimeout(function() {\n        hideSuccessMessage();\n    }, 5000);\n}\n\nfunction hideErrorMessage() {\n    $errorBox.addClass('hidden');\n    clearTimeout(errorBoxTimeout);\n}\n\nfunction showErrorMessage(caption) {\n    hideSuccessMessage();\n    $errorBox.find('.caption').html(caption);\n    $errorBox.removeClass('hidden');\n\n    errorBoxTimeout = setTimeout(function() {\n        hideErrorMessage();\n    }, 10000);\n}\n\nfunction hideWarningMessage() {\n    $warningBox.addClass('hidden');\n}\n\nfunction showWarningMessage(caption) {\n    hideWarningMessage();\n    $warningBox.find('.caption').html(caption);\n    $warningBox.removeClass('hidden');\n}\n\nfunction generateLaravelErrorList(errorList) {\n    if(!_.isPlainObject(errorList)) {\n        console.error('generateLaravelErrorList(): errorList is invalid', errorList);\n        return;\n    }\n\n    var resultHtml = '';\n\n    _.forOwn(errorList, function(messageList, formItem) {\n        if (!_.isArray(messageList)) {\n            console.error('generateLaravelErrorList(): messageList should be array', messageList, errorList, formItem);\n            return;\n        }\n\n        _.forEach(messageList, function(errorMessage) {\n            resultHtml += '<li>' + errorMessage + '</li>';\n        })\n    });\n\n    return '<ul>' + resultHtml + '</ul>';\n}\n\nfunction getKeyFromPlaceholder(placeholder) {\n    if (!_.isString(placeholder)) {\n        console.error('getKeyFromPlaceholder(): placeholder is not string', placeholder);\n        return;\n    }\n\n    if ((placeholder[0] !== '{') || (placeholder.substr(-1) !== '}')) {\n        console.error('getKeyFromPlaceholder(): placeholder is not of form {key}', placeholder);\n        return placeholder;\n    }\n\n    return placeholder.replace(/[{}]/g, '');\n}\n\nfunction fillPlaceholdersInString(string, data) {\n    if(!_.isString(string)) {\n        console.error('fillPlaceholdersInString(): string parameter should be of string type', string);\n        return;\n    }\n\n    if (!_.isPlainObject(data)) {\n        console.error('fillPlaceholdersInString(): data should be an object', data);\n        return string;\n    }\n\n    var placeholders = string.match(/\\{([a-z0-9\\-_]+)\\}/gi);\n    var resultString = string;\n\n    if (!placeholders.length) {\n        return resultString;\n    }\n\n    _.forEach(placeholders, function(placeholder) {\n        var regex = new RegExp(placeholder, 'g');\n        var key = getKeyFromPlaceholder(placeholder);\n        if (placeholder && data[key]) {\n            resultString = resultString.replace(regex, data[key]);\n        }\n    });\n\n    return resultString;\n}\n\nfunction showLoader() {\n    loaderTimeout = setTimeout(function() {\n        $('#loader').show();\n        loaderTimeout = undefined;\n    }, LOADER_DELAY);\n}\n\nfunction hideLoader() {\n    clearTimeout(loaderTimeout);\n    loaderTimeout = undefined;\n    $('#loader').hide();\n}\n\nfunction submitGenericAjaxForm(form) {\n    var $form = $(form);\n    var data = $form.serialize();\n    var action = $form.attr('action') || window.document.location;\n    var method = $form.attr('method') || 'POST';\n\n    showLoader();\n    var request = $.ajax({\n        url: action,\n        method: method,\n        data: data,\n        dataType: 'json'\n    });\n\n    request.done(function(data) {\n        console.log('Ajax success: ', data);\n    });\n\n    request.fail(function(error) {\n        console.error('Ajax error: ', error, error.responseJSON);\n    });\n\n    request.always(function() {\n        hideLoader();\n    });\n\n    return request;\n}\n\nfunction submitAjaxForm(form) {\n    var request = submitGenericAjaxForm(form);\n\n    var $form = $(form);\n\n    request.done(function(data) {\n        if (! _.isPlainObject(data)) {\n            console.error('submitAjaxForm(): ajax create did not receive the created item', data);\n            return;\n        }\n\n        var successMessage = $form.attr('success-message');\n        if (successMessage) {\n            showSuccessMessage(successMessage);\n        }\n\n        var successUrl = $form.attr('success-url');\n\n        if (successUrl) {\n            redirect(fillPlaceholdersInString(successUrl, data), 1000);\n        }\n        var successFunctionName = $form.attr('success-function');\n\n        if (successFunctionName) {\n            if (_.isFunction(window[successFunctionName])) {\n                window[successFunctionName]();\n            }\n        }\n    });\n\n    request.fail(function(error) {\n        var title = '<strong>' + ($(form).attr('error-message') || 'Error:')  + '</strong><br/>'\n        var message = title + generateLaravelErrorList(error.responseJSON);\n\n        showErrorMessage(message);\n    });\n}\n\n$(document).ready(function() {\n    $successBox = $('.message-box.success');\n    $errorBox = $('.message-box.error');\n    $warningBox = $('.message-box.warning');\n    $warningBox.click(function() {\n        hideWarningMessage();\n    });\n\n    $(document).on('submit', 'form[data-ajax=true]', function(ev) {\n        ev.preventDefault();\n        submitAjaxForm(this);\n    });\n});\n","$(document).ready(function() {\n    $('.dataTables-example').DataTable({\n        responsive: true,\n        \"language\":{\n            \"sInfo\": \"Arata de la _START_ la _END_ din _TOTAL_ intrari\",\n            \"sInfoEmpty\": \"Arata de la 0 la 0 din 0 intrari\",\n            \"sLengthMenu\": \"Arata _MENU_ intrari\",\n            \"sSearch\": \"Cauta\",\n            \"paginate\":{\n                \"next\": \"Inainte\",\n                \"previous\": \"Inapoi\",\n                \"first\": \"Primul\",\n                \"last\": \"Ultimul\"\n            },\n            \"sEmptyTable\": \"Nu exista nici o inregistrare in tabel\"\n        }\n    });\n});\n","$(document).ready(function(){\n\t$(\"input[data-action='publish-stakeholder'\").click(function(){\n\t\tvar request = $.ajax({\n\t\t\turl: $(this).attr('update-url'),\n\t\t\tdata: {\n\t\t\t\tpublished:$(this).prop('checked'),\n\t\t\t},\n\t\t\tmethod:'get'\n\t\t});\n\t\trequest.done(function(data){\n\t\t\tconsole.error(\"ajaxresult\",data);\n\t\t});\n\t});\n});"],"sourceRoot":"/source/"}